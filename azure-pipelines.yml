name: Deploy Bicep files $(Build.BuildId)

trigger: none
# - main

variables:
  resourceGroupName: 'lazar'
  #location: 'westeurope'
  #webAppName: 'bicep0023'
  templateFile: 'main.bicep'
  parameterFile: 'main.bicepparam'
  #subscription: Visual Studio Enterprise(b526a136-5b78-4fa3-9bd9-00c7bdadc807)
  #resourceGroup: resourcegroup-tfstate
  #storageAccount: tfstate1085
  #container: tfstate
  #tfstateFile: terraform.tfstate
  buildConfiguration: 'Release'
  azureSubscription: 'Azure Sub'
  #WebAppName: 'teliosPortal'
  #ResourceGroupName: 'Telios'
  #anyTfChanges: false
  #tf_version: 1.4.2

pool:
  vmImage: 'ubuntu-latest'

stages:
- stage: preDeploy
  jobs:
  - job: scanWhatif
    displayName: scan and run whatif
    pool:
      vmImage: windows-2022

    steps:
    
    - task: RunARMTTKTests@1
      displayName: Scan Bicep files
      inputs:
        templatelocation: '$(System.DefaultWorkingDirectory)'
        resultLocation: '$(System.DefaultWorkingDirectory)\results'
        allTemplatesMain: false
        cliOutputResults: true
        ignoreExitCode: true

    - task: PublishTestResults@2
      displayName: Publish Results
      inputs:
        testResultsFormat: 'NUnit'
        testResultsFiles: '$(System.DefaultWorkingDirectory)\results\*-armttk.xml'
      condition: always()

    - task: AzureCLI@2
      displayName: Preview Bicep Changes
      inputs:
        azureSubscription: $(azureSubscription)
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az --version
          az deployment group what-if --resource-group $(resourceGroupName) \
            --template-file $(templateFile) \
            --parameters $(parameterFile)

- stage: deployBicep
  jobs:

  - job: waitForValidation
    displayName: Wait for external validation
    pool: server
    timeoutInMinutes: 4320 # job times out in 3 days
    steps:
    - task: ManualValidation@0
      timeoutInMinutes: 1440 # task times out in 1 day
      inputs:
        notifyUsers: 'adedolapo@skedda.com'
        instructions: 'Please validate the build $(Build.BuildId) configuration and resume'
        onTimeout: 'resume'

  - job: deployAzure
    displayName: deploy bicep to Azure
    pool:
      vmImage: 'ubuntu-latest'
    dependsOn: [waitForValidation]

    steps:
    - task: AzureCLI@2
      displayName: Deploy Bicep To Azure
      inputs:
        azureSubscription: $(azureSubscription)
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az deployment group create --resource-group $(resourceGroupName) \
            --template-file $(templateFile) \
            --parameters $(parameterFile)


  - job: Build_DotnetApp
    dependsOn: deployAzure
    steps:
      # Build and publish the application library
      - task: DotNetCoreCLI@2
        displayName: 'dotnet restore'
        inputs:
          command: restore
          projects: '**/*.csproj'
      - task: DotNetCoreCLI@2
        displayName: 'dotnet build'
        inputs:
          command: build
          projects: '**/*.csproj'
          arguments: '--configuration $(buildConfiguration)'
      - task: DotNetCoreCLI@2
        displayName: 'dotnet publish'
        inputs:
          command: publish
          publishWebProjects: True
          arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)'
          zipAfterPublish: True

      # Publish the app as an artifact
      - publish: $(Build.ArtifactStagingDirectory)
        artifact: skedda_app
      
      - script: |
          cd $(Build.ArtifactStagingDirectory)
          tree -a