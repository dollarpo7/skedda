trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

variables:
  #subscription: Visual Studio Enterprise(17b12858-3960-4e6f-a663-a06fdae23428)
  #resourceGroup: resourcegroup-tfstate
  #storageAccount: tfstate1085
  #container: tfstate
  #tfstateFile: terraform.tfstate
  anyTfChanges: false
  #tf_version: 1.4.2
  
stages:
- stage: Terraform_init_plan
  pool:
    vmImage: ubuntu-latest
  jobs:
  - job: terraform_init_plan
    steps:
    - task: TerraformInstaller@1
      inputs:
        terraformVersion: '1.4.2'

    - task: TerraformTaskV4@4
      inputs:
        provider: 'azurerm'
        command: 'init'
        workingDirectory: '$(System.DefaultWorkingDirectory)/terra'
        backendServiceArm: 'Visual Studio Enterprise Subscription(b526a136-5b78-4fa3-9bd9-00c7bdadc807)'
        backendAzureRmResourceGroupName: 'skedda'
        backendAzureRmStorageAccountName: 'skedda101'
        backendAzureRmContainerName: 'skedda'
        backendAzureRmKey: 'skedda.terraform.tfstate'
    
    - task: TerraformTaskV4@4
      inputs:
        provider: 'azurerm'
        command: 'plan'
        workingDirectory: '$(System.DefaultWorkingDirectory)/terra'
        commandOptions: '-out=tfplan'
        environmentServiceNameAzureRM: 'Visual Studio Enterprise Subscription(b526a136-5b78-4fa3-9bd9-00c7bdadc807)'

    - task: PowerShell@2
      displayName: detect any terraform change
      inputs:
        workingDirectory: '$(System.DefaultWorkingDirectory)/terra'
        targetType: 'inline'
        script: |
          # Write-Host "LASTEXITCODE : $LASTEXITCODE"
          $plan = $(terraform show -json tfplan | ConvertFrom-Json)
          $actions = $plan.resource_changes.change.actions
          Write-Host "Terraform actions : $actions"
          if (($actions -contains 'create') -or ($actions -contains 'delete') -or ($actions -contains 'update'))
          {
            Write-Host "Terraform will perform the following actions : $actions"
            Write-Host "##vso[task.setvariable variable=anyTfChanges;]true"
          }
          else
          {
            Write-Host "There is no change detected in Terraform tfplan file"
          }

    - task: TerraformTaskV4@4
      inputs:
        provider: 'azurerm'
        command: 'apply'
        workingDirectory: '$(System.DefaultWorkingDirectory)/terra'
        commandOptions: 'tfplan'
        environmentServiceNameAzureRM: 'Visual Studio Enterprise Subscription(b526a136-5b78-4fa3-9bd9-00c7bdadc807)'
